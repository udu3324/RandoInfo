{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "RandoInfo",
    "description": "Get random bits of information!"
  },
  "host": "rando-info.vercel.app",
  "basePath": "/api/v1",
  "schemes": [
    "https"
  ],
  "tags": [
    {
      "name": "weather"
    },
    {
      "name": "string"
    }
  ],
  "paths": {
    "/weather": {
      "get": {
        "tags": [
          "weather"
        ],
        "summary": "Returns the forecast from a random city in the entire world.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A successful invocation response",
            "schema": {
              "type": "object",
              "properties": {
                "continent": {
                  "type": "string"
                },
                "local_time": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "icon": {
                  "type": "string",
                  "example": "emoji"
                },
                "temperature": {
                  "type": "object",
                  "example": {
                    "fahrenheit": "float",
                    "celcius": "float"
                  }
                },
                "coordinates": {
                  "type": "object",
                  "example": {
                    "latitude": "float",
                    "longitude": "float"
                  }
                },
                "google_maps": {
                  "type": "string",
                  "example": "url"
                },
                "open_street_maps": {
                  "type": "string",
                  "example": "url"
                },
                "sucess": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "A unsuccessful invocation response"
          },
          "504": {
            "description": "Gateway timeout/ratelimit"
          }
        }
      }
    },
    "/string": {
      "get": {
        "tags": [
          "string"
        ],
        "summary": "Get a random string saved in the database",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A successful invocation response",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "string": {
                  "type": "string"
                },
                "timestamp": {
                  "type": "string",
                  "example": "2025-01-22T04:39:10.513092+00:00"
                },
                "report": {
                  "type": "string",
                  "example": "Send a POST request to /string/report"
                }
              }
            }
          },
          "500": {
            "description": "Failed to read strings database"
          }
        }
      }
    },
    "/string/create": {
      "post": {
        "tags": [
          "string"
        ],
        "summary": "Save a string to the database",
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "name": "string",
            "in": "body",
            "description": "String that will be added (inappropriate strings will result in an blacklist)",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "string": {
                  "type": "string",
                  "example": "Type your string here!"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful invocation response",
            "schema": {
              "type": "string",
              "example": "String saved sucessfully! \"${string}\""
            }
          },
          "400": {
            "description": "String already is in database"
          },
          "401": {
            "description": "Reached creation limit of 10 strings"
          },
          "402": {
            "description": "Invalid json"
          },
          "403": {
            "description": "Provided empty string"
          },
          "404": {
            "description": "String provided is not a string"
          },
          "500": {
            "description": "Failed to read strings database"
          },
          "501": {
            "description": "Failed to write to database"
          },
          "599": {
            "description": "IP Blacklisted"
          }
        }
      }
    },
    "/string/report/{id}": {
      "post": {
        "tags": [
          "string"
        ],
        "summary": "Report a bad string in the database",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The string id that you are reporting",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful invocation response",
            "schema": {
              "type": "string",
              "example": "Sucessfuly created a report for string id ${id}"
            }
          },
          "300": {
            "description": "Did not provide string id"
          },
          "301": {
            "description": "No string stored with provided id"
          },
          "500": {
            "description": "Failed to read strings database"
          },
          "501": {
            "description": "Failed to create a report for string id"
          },
          "599": {
            "description": "IP Blacklisted"
          }
        }
      }
    },
    "/string/blacklist/{ip}": {
      "delete": {
        "tags": [
          "string"
        ],
        "summary": "Blacklist an ip from creating/reporting strings",
        "parameters": [
          {
            "name": "ip",
            "in": "path",
            "description": "The ip that is getting blacklisted",
            "required": true,
            "type": "string"
          },
          {
            "name": "auth_key",
            "in": "body",
            "description": "The authentication key needed to do this action",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "example": "authkey.012345abcdef"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful invocation response",
            "schema": {
              "type": "string",
              "example": "Sucessfully blacklisted ip ${ip}"
            }
          },
          "300": {
            "description": "Invalid json"
          },
          "301": {
            "description": "Did not provide auth key"
          },
          "302": {
            "description": "Key provided is not a string"
          },
          "303": {
            "description": "Auth key is empty"
          },
          "304": {
            "description": "Invalid authentication key"
          },
          "400": {
            "description": "Did not provide ip"
          },
          "401": {
            "description": "IP provided is invalid"
          },
          "402": {
            "description": "IP already blacklisted"
          },
          "500": {
            "description": "Failed to write to database"
          },
          "599": {
            "description": "IP Blacklisted"
          }
        }
      }
    }
  }
}